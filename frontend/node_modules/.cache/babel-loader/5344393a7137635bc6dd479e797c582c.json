{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\james\\\\desktop\\\\whereandwear-ui\\\\src\\\\index.js\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles'; // Card styling constants\n\nconst cardStyles = makeStyles({\n  root: {\n    width: 275,\n    height: 300,\n    margin: 35,\n    position: 'absolute',\n    bottom: 50,\n    borderRadius: 25\n  },\n  moreDetails: {\n    position: 'absolute',\n    padding: '5%',\n    right: 0,\n    top: 0,\n    fontFamily: 'Calibri'\n  },\n  title: {\n    fontSize: 20,\n    top: '5%',\n    position: 'absolute'\n  },\n  secondTitle: {\n    fontSize: 20,\n    top: '40%',\n    position: 'absolute'\n  },\n  pos: {\n    marginTop: 12,\n    position: 'relative'\n  }\n}); // CreateWeatherCard() function returns a weather card overlay\n\nexport default function CreateWeatherCard(props) {\n  const classes = cardStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        className: classes.moreDetails,\n        children: \"More Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        gutterBottom: true,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        children: \"25C / Sunny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.secondTitle,\n        gutterBottom: true,\n        children: \"Clothing Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n} // Map component\n\n_c = CreateWeatherCard;\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null\n    };\n    this.getCoordinates = this.getCoordinates.bind(this);\n  } // On component initialisation, get the users location in co-ordinates and set the state accordingly\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }); // TODO: remove when no longer required\n\n    console.log(position.coords.latitude);\n    console.log(position.coords.longitude);\n  } // TODO: decide how we want to handle these error cases\n\n\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"map-iframe\",\n          src: \"https://embed.windy.com/embed2.html?lat=52.896&lon=-2.241&detailLat=51.914&detailLon=-1.346&width=1600&height=900&zoom=7&level=surface&overlay=wind&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CreateWeatherCard, {\n          name: \"Brighton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWeatherCard\");","map":{"version":3,"sources":["C:/Users/james/desktop/whereandwear-ui/src/index.js"],"names":["serviceWorker","Button","Card","CardActions","CardContent","React","ReactDOM","Typography","makeStyles","cardStyles","root","width","height","margin","position","bottom","borderRadius","moreDetails","padding","right","top","fontFamily","title","fontSize","secondTitle","pos","marginTop","CreateWeatherCard","props","classes","name","Map","Component","constructor","state","latitude","longitude","userAddress","getCoordinates","bind","componentDidMount","navigator","geolocation","getCurrentPosition","handleLocationError","alert","setState","coords","console","log","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","render","zIndex","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Card styling constants\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    width: 275,\r\n    height: 300,\r\n    margin: 35,\r\n    position: 'absolute',\r\n    bottom: 50,\r\n    borderRadius: 25,\r\n  },\r\n  moreDetails: {\r\n    position: 'absolute',\r\n    padding: '5%',\r\n    right: 0,\r\n    top: 0,\r\n    fontFamily: 'Calibri',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    top: '5%',\r\n    position: 'absolute',\r\n  },\r\n  secondTitle: {\r\n    fontSize: 20,\r\n    top: '40%',\r\n    position: 'absolute',\r\n  },\r\n  pos: {\r\n    marginTop: 12,\r\n    position: 'relative',\r\n  },\r\n});\r\n\r\n// CreateWeatherCard() function returns a weather card overlay\r\nexport default function CreateWeatherCard(props) {\r\n  const classes = cardStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActions>\r\n        <Button size=\"small\" className={classes.moreDetails}>More Details</Button>\r\n      </CardActions>\r\n      <CardContent>\r\n        <Typography className={classes.title} gutterBottom>{props.name}</Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">25C / Sunny</Typography>\r\n        <Typography className={classes.secondTitle} gutterBottom>Clothing Suggestions</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Map component\r\nclass Map extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: null,\r\n      longitude: null,\r\n      userAddress: null\r\n    };\r\n    this.getCoordinates = this.getCoordinates.bind(this);\r\n\r\n  }\r\n\r\n  // On component initialisation, get the users location in co-ordinates and set the state accordingly\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n\r\n  getCoordinates(position) {\r\n    this.setState({\r\n      latitude: position.coords.latitude,\r\n      longitude: position.coords.longitude\r\n    })\r\n    // TODO: remove when no longer required\r\n    console.log(position.coords.latitude);\r\n    console.log(position.coords.longitude);\r\n  }\r\n\r\n  // TODO: decide how we want to handle these error cases\r\n  handleLocationError(error) {\r\n    switch (error.code) {\r\n      case error.PERMISSION_DENIED:\r\n        alert(\"User denied the request for Geolocation.\")\r\n        break;\r\n      case error.POSITION_UNAVAILABLE:\r\n        alert(\"Location information is unavailable.\")\r\n        break;\r\n      case error.TIMEOUT:\r\n        alert(\"The request to get user location timed out.\")\r\n        break;\r\n      case error.UNKNOWN_ERROR:\r\n        alert(\"An unknown error occurred.\")\r\n        break;\r\n      default:\r\n        alert(\"An unknown error occurred.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment>\r\n      <div style={{ zIndex: 0 }}><iframe className=\"map-iframe\"\r\n        src=\"https://embed.windy.com/embed2.html?lat=52.896&lon=-2.241&detailLat=51.914&detailLon=-1.346&width=1600&height=900&zoom=7&level=surface&overlay=wind&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1\"\r\n        frameBorder=\"0\">\r\n      </iframe></div>\r\n\r\n      <div><CreateWeatherCard name=\"Brighton\" /></div>\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <Map />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}