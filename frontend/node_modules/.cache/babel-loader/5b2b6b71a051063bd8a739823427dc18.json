{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\james\\\\desktop\\\\whereandwear-ui\\\\frontend\\\\src\\\\components\\\\Map.js\";\nimport CreateMenu from './MenuButton.js';\nimport CreateWeatherCard from './WeatherCard.js';\nimport React from 'react'; // Map component\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null\n    };\n    this.getCoordinates = this.getCoordinates.bind(this);\n  } // On component initialisation, get the users location in co-ordinates and set the state accordingly\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }); // TODO: remove when no longer required\n\n    console.log(position.coords.latitude);\n    console.log(position.coords.longitude);\n  } // TODO: decide how we want to handle these error cases\n\n\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"map-iframe\",\n          src: \"https://embed.windy.com/embed2.html?lat=52.896&lon=-2.241&detailLat=51.914&detailLon=-1.346&width=1600&height=900&zoom=7&level=surface&overlay=wind&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CreateWeatherCard, {\n          name: \"Brighton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CreateMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/james/desktop/whereandwear-ui/frontend/src/components/Map.js"],"names":["CreateMenu","CreateWeatherCard","React","Map","Component","constructor","props","state","latitude","longitude","userAddress","getCoordinates","bind","componentDidMount","navigator","geolocation","getCurrentPosition","handleLocationError","alert","position","setState","coords","console","log","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","render","zIndex"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD,GAV6B,CAY9B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKL,cAA9C,EAA8D,KAAKM,mBAAnE;AACD,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACD;AACF;;AAEDP,EAAAA,cAAc,CAACQ,QAAD,EAAW;AACvB,SAAKC,QAAL,CAAc;AACZZ,MAAAA,QAAQ,EAAEW,QAAQ,CAACE,MAAT,CAAgBb,QADd;AAEZC,MAAAA,SAAS,EAAEU,QAAQ,CAACE,MAAT,CAAgBZ;AAFf,KAAd,EADuB,CAKvB;;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,MAAT,CAAgBb,QAA5B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,MAAT,CAAgBZ,SAA5B;AACD,GA7B6B,CA+B9B;;;AACAQ,EAAAA,mBAAmB,CAACO,KAAD,EAAQ;AACzB,YAAQA,KAAK,CAACC,IAAd;AACE,WAAKD,KAAK,CAACE,iBAAX;AACER,QAAAA,KAAK,CAAC,0CAAD,CAAL;AACA;;AACF,WAAKM,KAAK,CAACG,oBAAX;AACET,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;;AACF,WAAKM,KAAK,CAACI,OAAX;AACEV,QAAAA,KAAK,CAAC,6CAAD,CAAL;AACA;;AACF,WAAKM,KAAK,CAACK,aAAX;AACEX,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACA;;AACF;AACEA,QAAAA,KAAK,CAAC,4BAAD,CAAL;AAdJ;AAgBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,8BACL;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA,+BAA2B;AAAQ,UAAA,SAAS,EAAC,YAAlB;AACzB,UAAA,GAAG,EAAC,2SADqB;AAEzB,UAAA,WAAW,EAAC;AAFa;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cADK,eAML;AAAA,+BAAK,QAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cANK,eAOL;AAAA,+BAAK,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAPK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASD;;AA7D6B;;AAgEhC,eAAe5B,GAAf","sourcesContent":["import CreateMenu from './MenuButton.js';\r\nimport CreateWeatherCard from './WeatherCard.js';\r\nimport React from 'react';\r\n\r\n// Map component\r\nclass Map extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        latitude: null,\r\n        longitude: null,\r\n        userAddress: null\r\n      };\r\n      this.getCoordinates = this.getCoordinates.bind(this);\r\n    }\r\n  \r\n    // On component initialisation, get the users location in co-ordinates and set the state accordingly\r\n    componentDidMount() {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    }\r\n    \r\n    getCoordinates(position) {\r\n      this.setState({\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude\r\n      })\r\n      // TODO: remove when no longer required\r\n      console.log(position.coords.latitude);\r\n      console.log(position.coords.longitude);\r\n    }\r\n  \r\n    // TODO: decide how we want to handle these error cases\r\n    handleLocationError(error) {\r\n      switch (error.code) {\r\n        case error.PERMISSION_DENIED:\r\n          alert(\"User denied the request for Geolocation.\")\r\n          break;\r\n        case error.POSITION_UNAVAILABLE:\r\n          alert(\"Location information is unavailable.\")\r\n          break;\r\n        case error.TIMEOUT:\r\n          alert(\"The request to get user location timed out.\")\r\n          break;\r\n        case error.UNKNOWN_ERROR:\r\n          alert(\"An unknown error occurred.\")\r\n          break;\r\n        default:\r\n          alert(\"An unknown error occurred.\")\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return <React.Fragment>\r\n        <div style={{ zIndex: 0 }}><iframe className=\"map-iframe\"\r\n          src=\"https://embed.windy.com/embed2.html?lat=52.896&lon=-2.241&detailLat=51.914&detailLon=-1.346&width=1600&height=900&zoom=7&level=surface&overlay=wind&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1\"\r\n          frameBorder=\"0\">\r\n        </iframe></div>\r\n  \r\n        <div><CreateWeatherCard name=\"Brighton\" /></div>\r\n        <div><CreateMenu/></div>  \r\n      </React.Fragment>\r\n    }\r\n  }\r\n\r\n  export default Map;"]},"metadata":{},"sourceType":"module"}